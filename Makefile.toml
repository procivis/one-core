# Docs: https://github.com/sagiegurari/cargo-make

env_files = [
    "./dev.env",
]

[config]
default_to_workspace = false

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.build]
command = "cargo"
args = ["build",  "-p", "core-server"]

[tasks.run]
command = "cargo"
args = ["run", "-p", "core-server"]

[tasks.test]
workspace = true
command = "cargo"
args = ["test"]

[tasks.dbstart]
command = "docker-compose"
args = ["-f", "docker/db.yml", "up", "-d" ]

[tasks.dbstop]
command = "docker-compose"
args = ["-f", "docker/db.yml", "down" ]

[tasks.dbdrop]
script = [
    "docker rm --force docker_mariadb_1",
    "docker volume rm docker_mariadb_data",
]

[tasks.dbup1]
cwd = "./apps/migration"
command = "cargo"
args = ["run", "--", "up", "-n1" ]

[tasks.dbdown1]
cwd = "./apps/migration"
command = "cargo"
args = ["run", "--", "down", "-n1" ]

[tasks.dbtempent]
command = "sea-orm-cli"
args = ["generate", "entity", "--date-time-crate" , "time", "-o", "lib/one-core/src/data_layer/entities_new/" ]

############################################################### ANDROID-UNIFFI
[tasks.add_android_targets]
command = "rustup"
args = ["target", "add", "x86_64-linux-android", "i686-linux-android", "armv7-linux-androideabi", "aarch64-linux-android"]

[tasks.install_cross]
command = "cargo"
args = ["install", "cross", "--git", "https://github.com/cross-rs/cross", "--rev", "1aab4cf"]

[tasks.generateuniffi_android]
script='''
cargo run --features=uniffi/cli -p uniffi-bindgen --bin uniffi-bindgen generate -l kotlin -o target/android_tmp platforms/uniffi/src/one_core.udl
mkdir -p target/uniffi/android/java/one_core/
mv target/android_tmp/uniffi/one_core/* target/uniffi/android/java/one_core
rm -rf target/android_tmp
'''

[tasks.build_android_targets]
script='''
cross build -p one-core-uniffi --target x86_64-linux-android --release
cross build -p one-core-uniffi --target i686-linux-android --release
cross build -p one-core-uniffi --target armv7-linux-androideabi --release
cross build -p one-core-uniffi --target aarch64-linux-android --release
'''

[tasks.collect_android_libs]
script='''
mkdir -p target/uniffi/android/jniLibs/x86_64/
cp target/x86_64-linux-android/release/libone_core_uniffi.so target/uniffi/android/jniLibs/x86_64/libuniffi_one_core.so
mkdir -p target/uniffi/android/jniLibs/x86/
cp target/i686-linux-android/release/libone_core_uniffi.so target/uniffi/android/jniLibs/x86/libuniffi_one_core.so
mkdir -p target/uniffi/android/jniLibs/armeabi-v7a/
cp target/armv7-linux-androideabi/release/libone_core_uniffi.so target/uniffi/android/jniLibs/armeabi-v7a/libuniffi_one_core.so
mkdir -p target/uniffi/android/jniLibs/arm64-v8a/
cp target/aarch64-linux-android/release/libone_core_uniffi.so target/uniffi/android/jniLibs/arm64-v8a/libuniffi_one_core.so
'''

[tasks.build_android_uniffi]
dependencies = ["install_cross", "generateuniffi_android", "build_android_targets", "collect_android_libs"]

############################################################### ANDROID-GRADLE
[tasks.prepare_gradle_build_directory]
dependencies = ["build_android_uniffi"]
script='''
mkdir -p target/platforms/android
cp -r platforms/android/* target/platforms/android/
cp -r target/uniffi/android/* target/platforms/android/onecore/src/main/
'''

[tasks.build_android_gradle]
dependencies = ["prepare_gradle_build_directory"]
script='''
cd target/platforms/android
./gradlew assemble
'''

[tasks.build_android]
dependencies = ["build_android_gradle"]
script='''
mkdir -p target/bindings/android/
cp -r target/platforms/android/onecore/build/outputs/aar/* target/bindings/android/
'''
