[package]
authors           = ["Procivis"]
build             = "build.rs"
edition.workspace = true
license           = "Apache-2.0"
name              = "one-core"
publish           = false
version           = "0.1.0"

[dependencies]
aes-gcm                  = { version = "0.10.3", features = ["std"] }
anyhow.workspace         = true
asn1-rs.workspace        = true
async-trait.workspace    = true
bincode                  = { version = "1.3" }
bit-vec                  = { version = "0.8" }
bon                      = { version = "3.3" }
bs58.workspace           = true
ciborium                 = { version = "0.2" }
convert_case             = { version = "0.6" }
coset                    = { version = "0.3", features = ["std"] }
crc                      = { version = "3.2.1" }
ct-codecs.workspace      = true
dashmap                  = "6.1.0"
figment                  = { version = "0.10", default-features = false }
flate2                   = { version = "1.0" }
futures.workspace        = true
hex.workspace            = true
hkdf                     = { version = "0.12.4", features = ["std"] }
human-sort               = { version = "0.2" }
indexmap.workspace       = true
itertools                = { version = "0.13" }
json-ld                  = { version = "0.21" }
json-syntax              = { version = "0.12", features = ["serde", "serde_json"] }
jsonptr                  = { version = "0.6" }
maplit.workspace         = true
mime                     = { version = "0.3" }
mockall                  = { workspace = true, optional = true }
mrtd                     = { version = "0.5.2" }
multihash.workspace      = true
one-crypto               = { version = "0.1.0", path = "../one-crypto" }
one-dto-mapper.workspace = true
ouroboros                = { version = "0.18" }
pem                      = { version = "3" }
rand.workspace           = true
rcgen.workspace          = true
regex.workspace          = true
reqwest.workspace        = true
rumqttc                  = { version = "0.24", default-features = false, features = ["use-native-tls"] }
secrecy                  = { workspace = true }
serde.workspace          = true
serde_json.workspace     = true
serde_qs.workspace       = true
serde_repr               = { version = "0.1" }
serde_urlencoded         = { version = "0.7" }
serde_with.workspace     = true
serde_yaml               = { version = "0.9" }
sha2                     = { version = "0.10" }
shadow-rs.workspace      = true
shared-types             = { version = "0.1.0", path = "../shared-types" }
sophia_api               = { version = "0.9" }
sophia_c14n              = { version = "0.9" }
strum.workspace          = true
tempfile.workspace       = true
thiserror.workspace      = true
time.workspace           = true
tokio                    = { workspace = true, features = ["macros"] }
tokio-util               = { version = "0.7", features = ["rt"] }
tracing.workspace        = true
url.workspace            = true
urlencoding.workspace    = true
uuid                     = { workspace = true, features = ["serde"] }
x25519-dalek             = { version = "2.0", features = ["reusable_secrets", "serde"] }
x509-parser              = { version = "0.17", features = ["verify"] }
yasna                    = { version = "0.5" }
zip                      = { version = "2.1" }

[dev-dependencies]
assert2                   = { version = "0.3" }
hex-literal               = { version = "0.4" }
indoc                     = { version = "2.0" }
jsonschema                = { version = "0.26", default-features = false }
mockall.workspace         = true
one-crypto                = { version = "0.1.0", path = "../one-crypto", features = ["mock"] }
rstest                    = { version = "0.23" }
rusty-fork                = { version = "0.3" }
serde_json_path.workspace = true
similar-asserts.workspace = true
tokio                     = { workspace = true, features = ["rt-multi-thread", "macros"] }
wiremock                  = { version = "0.6" }

[build-dependencies]
shadow-rs.workspace = true

[features]
config_env  = ["figment/env"]
config_json = ["figment/json"]
config_yaml = ["figment/yaml"]
default     = ["config_yaml"]
mock        = ["mockall", "one-crypto/mock"]

[lints]
workspace = true
