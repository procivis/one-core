[package]
name    = "one-core"
version = "0.1.0"
edition = "2021"
build   = "build.rs"
publish = false

[dependencies]
anyhow.workspace           = true
async-trait                = { version = "0.1" }
ct-codecs.workspace        = true
dto_mapper.workspace       = true
reqwest.workspace          = true
serde_yaml                 = { version = "0.9" }
serde.workspace            = true
serde_json.workspace       = true
serde_qs.workspace         = true
serde_urlencoded.workspace = true
serde_with.workspace       = true
thiserror.workspace        = true
time.workspace             = true
tokio.workspace            = true
uuid.workspace             = true
shadow-rs.workspace        = true
strum.workspace            = true
mockall                    = { workspace = true, optional = true }
rand.workspace             = true
rand_chacha.workspace      = true
sha2                       = { version = "0.10" }
ed25519-compact            = { version = "2.1", features = ["pem"] }
bit-vec                    = { version = "0.6" }
flate2                     = { version = "1.0" }
regex                      = { version = "1.10" }
url.workspace              = true
figment                    = { version = "0.10", default-features = false }
bs58                       = { version = "0.5" }
strum_macros               = { version = "0.26" }
cocoon                     = { version = "0.4" }
tokio-util                 = { version = "0.7", features = ["compat"] }
shared-types               = { version = "0.1.0", path = "../shared-types" }
elliptic-curve.workspace   = true
p256.workspace             = true
fmap.workspace             = true
pqc_dilithium              = { version = "0.2.0", git = "https://github.com/kibernetikos/dilithium", rev = "b7106801cf" }
convert_case               = { version = "0.6" }
contextual                 = { version = "0.1" }
json-syntax                = { version = "0.9" }
locspan                    = { version = "0.7" }
json-ld                    = { version = "0.15" }
mime                       = { version = "0.3" }
rdf-types                  = { version = "0.15" }
sophia_iri                 = { version = "0.8" }
sophia_jsonld              = { version = "0.8", features = ["http_client"] }
sophia_api                 = { version = "0.8" }
sophia_c14n                = { version = "0.8" }
pairing_crypto             = { version = "0.4", git = "https://github.com/Iskander508/pairing_crypto", rev = "517a424a989b57b987aacb3642bd7cd2c60b94d1" }
blstrs                     = { version = "0.7" }
hmac                       = { version = "0.12" }
ciborium                   = { version = "0.2" }
coset                      = { version = "0.3" }
chacha20poly1305           = { version = "0.10" }
tempfile.workspace         = true
zip                        = { version = "2.1" }
pbkdf2                     = { version = "0.12", features = ["simple"] }
futures.workspace          = true
tracing.workspace          = true
hex.workspace              = true
jsonptr                    = { version = "0.4" }
indexmap                   = { version = "2.2", features = ["serde"] }
josekit                    = { version = "0.8", features = ["vendored"] }
zeroize                    = { version = "1.8", features = ["serde"] }
rcgen                      = { version = "0.13" }
yasna                      = { version = "0.5" }
x509-parser                = { version = "0.16", features = ["verify"] }
ouroboros                  = { version = "0.18" }
itertools                  = { version = "0.13" }
urlencoding                = { version = "2.1" }

[dev-dependencies]
bs58               = { version = "0.5" }
wiremock.workspace = true
mockall.workspace  = true
tokio              = { workspace = true, features = ["rt-multi-thread", "macros"] }
assert2            = { version = "0.3" }
indoc              = { version = "2.0" }
rusty-fork         = { version = "0.3" }
hex-literal        = { version = "0.4" }
maplit             = { version = "1.0" }

[build-dependencies]
shadow-rs.workspace = true

[features]
default     = ["config_yaml"]
mock        = ["mockall"]
config_yaml = ["figment/yaml"]
config_json = ["figment/json"]
config_env  = ["figment/env"]


[lints]
workspace = true
